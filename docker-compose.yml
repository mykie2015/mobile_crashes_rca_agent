services:
  # PostgreSQL database for Langfuse
  postgres:
    image: postgres:15
    container_name: mobile_rca_postgres
    environment:
      POSTGRES_DB: langfuse
      POSTGRES_USER: langfuse
      POSTGRES_PASSWORD: langfuse
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U langfuse -d langfuse"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ClickHouse database for Langfuse analytics
  clickhouse:
    image: clickhouse/clickhouse-server:24-alpine
    container_name: mobile_rca_clickhouse
    user: "101:101"
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 1s

  # Langfuse observability platform
  langfuse-server:
    image: langfuse/langfuse:latest
    container_name: mobile_rca_langfuse
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      # Database
      DATABASE_URL: postgresql://langfuse:langfuse@postgres:5432/langfuse
      
      # ClickHouse for analytics
      CLICKHOUSE_URL: http://clickhouse:8123
      CLICKHOUSE_MIGRATION_URL: clickhouse://clickhouse:9000
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_CLUSTER_ENABLED: false
      
      # Authentication
      NEXTAUTH_SECRET: mysecret
      NEXTAUTH_URL: http://localhost:3000
      SALT: ${SALT:-langfuse-strong-encryption-salt-key-2024-min-32-chars-required}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-0000000000000000000000000000000000000000000000000000000000000000}
      
      # Configuration
      TELEMETRY_ENABLED: ${TELEMETRY_ENABLED:-true}
      LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: ${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
      
      # Optional: Set hostname for Docker
      HOSTNAME: 0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/public/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mobile Crash RCA Agent
  mobile-rca-agent:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: mobile_rca_agent
    depends_on:
      langfuse-server:
        condition: service_healthy
    environment:
      # OpenAI API
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_API_BASE: ${OPENAI_API_BASE:-https://api.openai.com/v1}
      DEFAULT_LLM_MODEL: ${DEFAULT_LLM_MODEL:-gpt-4o-mini}
      
      # Langfuse Configuration
      LANGFUSE_SECRET_KEY: ${LANGFUSE_SECRET_KEY:-lf-sk-test}
      LANGFUSE_PUBLIC_KEY: ${LANGFUSE_PUBLIC_KEY:-lf-pk-test}
      LANGFUSE_HOST: http://langfuse-server:3000
      
      # Agent Configuration
      PYTHONPATH: /app
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    ports:
      - "8000:8000"
    restart: unless-stopped
    # For development, you can override the command
    # command: ["python", "-c", "import time; time.sleep(3600)"]  # Keep container running for development

volumes:
  postgres_data:
    driver: local
  clickhouse_data:
    driver: local
  clickhouse_logs:
    driver: local

networks:
  default:
    name: mobile_rca_network 